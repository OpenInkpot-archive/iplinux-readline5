#!/usr/bin/make -f
# -*- makefile -*-

include /usr/share/dpatch/dpatch.make

soversion = 5
libversion = $(soversion).2

# architecture dependent variables
DEB_HOST_ARCH		?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_ARCH_OS	?= $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)
DEB_HOST_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE	?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

distribution := $(shell lsb_release -is)

ifeq ($(DEB_HOST_ARCH_OS),netbsd)
  CC_LINK_FLAGS =
else
  CC_LINK_FLAGS = -Wl,
endif
CC	= gcc

SHELL	= bash

PWD	:= $(shell pwd)
p_rl	= libreadline$(soversion)
p_comm	= readline-common
p_rld	= $(p_rl)-dev
p_rlg	= $(p_rl)-dbg

d	= debian/tmp
d_rl	= debian/$(p_rl)
d_comm	= debian/$(p_comm)
d_rld	= debian/$(p_rld)
d_rlg	= debian/$(p_rlg)

srcdir		= $(PWD)
builddir	= $(PWD)/build

default: build

configure: dpatch configure-stamp
configure-stamp: patch-stamp
	dh_testdir
	cp -p /usr/share/misc/config.* ./support/
	rm -rf $(builddir)
	mkdir $(builddir)
	find . -type d | xargs chmod g-s
	cd $(builddir) && \
	  $(srcdir)/configure \
		--with-curses --prefix=/usr\
		--host=$(DEB_HOST_GNU_TYPE) --build $(DEB_BUILD_GNU_TYPE)

	touch configure-stamp

build: build-stamp

build-stamp: configure-stamp
	dh_testdir
	$(MAKE) -C $(builddir) \
	    CFLAGS="-g -O2" \
	    SHOBJ_CFLAGS="-fPIC -D_REENTRANT" \
	    SHLIB_LIBS="-lncurses"

	touch build-stamp

clean: unpatch
	dh_testdir
	dh_testroot
	rm -rf autom4te.cache
	rm -rf $(builddir)
	rm -f doc/*.dvi
	rm -f debian/shlibs.local
	find . -type d | xargs chmod g-s
	rm -f support/config.guess support/config.sub
	dh_clean

install: install-stamp
install-stamp:
	dh_testdir
	dh_testroot
	dh_prep
	rm -rf $(d)
	mkdir -p $(d)/usr/bin
	$(MAKE) -C $(builddir) install \
	    CFLAGS="-g -O2 -D_REENTRANT" \
	    DESTDIR=$(PWD)/$(d) \
	    mandir=/usr/share/man \
	    infodir=/usr/share/info

	: # move $(p_rl)
	dh_installdirs -p$(p_rl) \
		lib
	cp -a $(d)/usr/lib/lib{history,readline}.so.* $(d_rl)/lib/

	: # move $(p_comm)
	dh_installdirs -p$(p_comm) \
		usr/share/readline
	install -m 644 debian/inputrc $(d_comm)/usr/share/readline/

	: # move $(p_rlg)
	dh_installdirs -p$(p_rlg) \
		usr/lib/debug
	mv $(d)/usr/lib/lib{history,readline}.so.$(libversion) \
		$(d_rlg)/usr/lib/debug/.
	ln -s libhistory.so.$(libversion) \
		$(d_rlg)/usr/lib/debug/libhistory.so.$(soversion)
	ln -s libreadline.so.$(libversion) \
		$(d_rlg)/usr/lib/debug/libreadline.so.$(soversion)

	: # move $(p_rld)
	dh_installdirs -p$(p_rld) \
		usr/lib
	ln -s /lib/libhistory.so.$(soversion) $(d_rld)/usr/lib/libhistory.so
	ln -s /lib/libreadline.so.$(soversion) $(d_rld)/usr/lib/libreadline.so
	mv $(d)/usr/lib/lib{history,readline}.a	$(d_rld)/usr/lib/.
	mv $(d)/usr/include $(d_rld)/usr/.

	: # remove HAVE_CONFIG_H from installed headers
	awk '/^#if defined \(HAVE_CONFIG_H\)/, /^#endif/ \
	     {if ($$0 == "#else") print "#include <string.h>"; next} {print}' \
	  $(d_rld)/usr/include/readline/chardefs.h \
	  > $(d_rld)/usr/include/readline/chardefs.h.new
	if diff -u $(d_rld)/usr/include/readline/chardefs.h \
		$(d_rld)/usr/include/readline/chardefs.h.new; \
	then \
	  rm -f $(d_rld)/usr/include/readline/chardefs.h.new; \
	else \
	  mv -f $(d_rld)/usr/include/readline/chardefs.h.new \
	    $(d_rld)/usr/include/readline/chardefs.h; \
	fi

	touch install-stamp

binary-indep: build install
	dh_testdir
	dh_testroot
	dh_compress -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_builddeb -i

binary-arch: build install
	dh_testdir
	dh_testroot

	dh_fixperms -p$(p_rl) -p$(p_rld) -p$(p_rlg)
	dh_strip -p$(p_rl) -p$(p_rld) -p$(p_rlg)
	dh_compress -p$(p_rl) -p$(p_rld) -p$(p_rlg) \
		-X.c
	dh_makeshlibs -p$(p_rl) -V '$(p_rl) (>= 5.2)'
	cp -p debian/$(p_rl).shlibs debian/shlibs.local
	dh_shlibdeps -p$(p_rl) -p$(p_rld) -p$(p_rlg) \
		 -L $(p_rl) -l $(d_rl)/lib

	dh_installdeb -s
	dh_gencontrol -s $(gencontrol_flags)
	dh_md5sums -s
	dh_builddeb -s

binary:		binary-indep binary-arch

.PHONY: binary binary-arch binary-indep clean
